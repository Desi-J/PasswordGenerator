{"version":3,"sources":["main.js"],"names":["sliderElement","document","getElementById","numberElement","addEventListener","handleInput","e","syncNumbers","updateProgressBar","characterCount","value","innerText","String","sliderProgressBar","querySelector","slider","target","distance","max","min","width","style","passwordText","copyIcon","copyTextConfirm","copyToClipboard","copyContent","navigator","clipboard","writeText","then","classList","remove","setTimeout","add","checkboxElements","Array","from","querySelectorAll","forEach","element","id","checked","handleCheck","el","parentLabel","parentElement","customCheckbox","toggle","checkUserInput","points","checkPassword","styleData","calculatePoints","applyColor","form","handleSubmit","preventDefault","generatePassword","characterObject","lowercase","uppercase","numbers","symbols","checkboxArray","sliderValue","checkedValues","reduce","acc","item","length","alert","possibleCharacters","genaratePossibleCharacters","password","i","randomCharacter","charAt","Math","floor","random","push","join","lowercaseRegex","uppercaseRegex","numberRegex","symbolRegex","mediumLength","longLength","regexArray","regex","match","strengthText","color","count","barElements","index","className","categories","map","category","string","concat"],"mappings":"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","file":"main.1f19ae8e.js","sourceRoot":"..","sourcesContent":["// SYNC RANGE SLIDER TO NUMBER\r\nconst sliderElement = document.getElementById(\"slider\");\r\nconst numberElement = document.getElementById(\"length\");\r\n\r\nsliderElement.addEventListener(\"input\", handleInput);\r\n\r\nfunction handleInput(e) {\r\n  syncNumbers();\r\n  updateProgressBar(e);\r\n}\r\nfunction syncNumbers() {\r\n  const characterCount = sliderElement.value;\r\n  numberElement.innerText = String(characterCount);\r\n}\r\n\r\n//SLIDER PROGRESS COLOR\r\nconst sliderProgressBar = document.querySelector(\"#sliderProgress\");\r\n\r\nfunction updateProgressBar(e) {\r\n  const slider = e.target;\r\n  //percentage\r\n  const distance = slider.max - slider.min;\r\n  const width = (100 / distance) * (slider.value - slider.min);\r\n  sliderProgressBar.style.width = width + \"%\";\r\n}\r\n\r\n//COPY TO CLIPBOARD\r\nconst passwordText = document.getElementById(\"password-text\");\r\nconst copyIcon = document.getElementById(\"copy-icon\");\r\nconst copyTextConfirm = document.querySelector(\".copy-text\");\r\n\r\ncopyIcon.addEventListener(\"click\", copyToClipboard);\r\n\r\nfunction copyToClipboard() {\r\n  let copyContent = passwordText.value;\r\n  navigator.clipboard\r\n    .writeText(copyContent)\r\n\r\n    .then(copyTextConfirm.classList.remove(\"hidden\"));\r\n  setTimeout(() => {\r\n    copyTextConfirm.classList.add(\"hidden\");\r\n  }, 4000);\r\n}\r\n\r\n//CUSTOM CHECKMARK STYLE\r\nconst checkboxElements = Array.from(\r\n  document.querySelectorAll(\"input[type='checkbox']\")\r\n);\r\n\r\ncheckboxElements.forEach((element) => {\r\n  if (element.id === \"lowercase\") {\r\n    element.checked = true;\r\n  } else {\r\n    element.checked = false;\r\n  }\r\n  element.addEventListener(\"click\", handleCheck);\r\n});\r\n\r\nfunction handleCheck(e) {\r\n  const el = e.target;\r\n  const parentLabel = el.parentElement;\r\n  const customCheckbox = parentLabel.querySelector(\"span\");\r\n  customCheckbox.classList.toggle(\"checked\");\r\n}\r\n\r\n//CHECK USER INPUT\r\npasswordText.addEventListener(\"input\", checkUserInput);\r\n\r\nfunction checkUserInput(e) {\r\n  const points = checkPassword(e.target.value);\r\n  const styleData = calculatePoints(points);\r\n  applyColor(styleData);\r\n}\r\n\r\n//GENERATE BUTTON\r\nconst form = document.getElementById(\"form\");\r\nform.addEventListener(\"submit\", handleSubmit);\r\n\r\nfunction handleSubmit(e) {\r\n  e.preventDefault();\r\n  generatePassword(checkboxElements, sliderElement.value);\r\n}\r\n\r\n//CHARACTER OBJECT\r\nconst characterObject = {\r\n  lowercase: \"abcdefghijklmnopqrstuvwxyz\",\r\n  uppercase: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\",\r\n  numbers: \"0123456789\",\r\n  symbols: \"!@#$%^&*-_?\"\r\n};\r\n\r\n//GENERATE PASSWORD\r\nfunction generatePassword(checkboxArray, sliderValue) {\r\n  const checkedValues = checkboxArray.reduce((acc, item) => {\r\n    if (item.checked === true) acc = [...acc, item.id];\r\n    return acc;\r\n  }, []);\r\n\r\n  if (checkedValues.length === 0) {\r\n    alert(\"You must check at least one checkbox\");\r\n    return;\r\n  }\r\n\r\n  const possibleCharacters = genaratePossibleCharacters(checkedValues);\r\n\r\n  let password = [];\r\n  for (let i = 0; i < sliderValue; i++) {\r\n    const randomCharacter = possibleCharacters.charAt(\r\n      Math.floor(Math.random() * possibleCharacters.length)\r\n    );\r\n    password.push(randomCharacter);\r\n  }\r\n\r\n  passwordText.value = password.join(\"\");\r\n\r\n  const points = checkPassword();\r\n  const styleData = calculatePoints(points);\r\n  applyColor(styleData);\r\n}\r\n\r\n//CHECK PASSWORD\r\nconst lowercaseRegex = /([a-z])/;\r\nconst uppercaseRegex = /([A-Z])/;\r\nconst numberRegex = /\\d/;\r\nconst symbolRegex = /\\W/;\r\n\r\nconst mediumLength = 8;\r\nconst longLength = 12;\r\n\r\nfunction checkPassword() {\r\n  //check length\r\n  const password = passwordText.value;\r\n  let points = 0;\r\n\r\n  const length = passwordText.value.length;\r\n  if (length >= mediumLength && length < longLength) {\r\n    points++;\r\n  }\r\n  if (length >= longLength) {\r\n    points += 2;\r\n  }\r\n\r\n  //check characters\r\n  const regexArray = [lowercaseRegex, uppercaseRegex, numberRegex, symbolRegex];\r\n\r\n  regexArray.forEach((regex) => {\r\n    if (password.match(regex)) {\r\n      points++;\r\n    }\r\n  });\r\n\r\n  return points;\r\n}\r\n\r\n//CALCULATE POINTS\r\nconst strengthText = document.getElementById(\"strength-text\");\r\n\r\nfunction calculatePoints(points) {\r\n  let color;\r\n  let count;\r\n\r\n  switch (points) {\r\n    case 6:\r\n    case 5:\r\n      strengthText.innerText = \"Strong\";\r\n      color = \"primary\";\r\n      count = 4;\r\n      break;\r\n    case 4:\r\n      strengthText.innerText = \"Medium\";\r\n      color = \"caution\";\r\n      count = 3;\r\n      break;\r\n    case 3:\r\n    case 2:\r\n      strengthText.innerText = \"Weak\";\r\n      color = \"warning\";\r\n      count = 2;\r\n      break;\r\n    case 1:\r\n      strengthText.innerText = \"Too Weak!\";\r\n      color = \"danger\";\r\n      count = 1;\r\n      break;\r\n    case 0:\r\n      strengthText.innerText = \"N/A\";\r\n      color = \"blank\";\r\n      count = 0;\r\n      break;\r\n    default:\r\n      return;\r\n  }\r\n  return [color, count];\r\n}\r\n\r\n//SET COLOR\r\nconst barElements = document.querySelectorAll(\".bar\");\r\n\r\nfunction applyColor(styleData) {\r\n  const [color, count] = styleData;\r\n\r\n  barElements.forEach((element, index) => {\r\n    element.className = \"bar\";\r\n\r\n    if (index > count - 1) return;\r\n\r\n    element.className = `bar fill-${color}`;\r\n  });\r\n}\r\n\r\n//GENERATE USABLE CHARACTERS\r\nfunction genaratePossibleCharacters(categories) {\r\n  return categories\r\n    .map((category) => {\r\n      let string = \"\";\r\n      return string.concat(characterObject[category]);\r\n    })\r\n    .join(\"\");\r\n}\r\n"]}